[include]
	# this contains author and email
	path = .gitconfig.local

[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = auto

[merge]
	summary = true
	log = true

[pull]
        ff = only

[push]
	default = simple
	
[gc]
	auto = 1

[alias]
	b = branch -v
	ba = branch -v -a
	r = remote -v
	t = tag -l
	s = status -s

	# show staged diff
	staged = diff --cached

	cp = cherry-pick -x
	unstage = reset HEAD
	uncommit = reset --soft HEAD^

	# View the SHA, description, and history graph of the latest 20 commits
	l = log -n 20 --graph
	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"
	# Clone a repository including all submodules
	c = clone --recursive
	# Commit all changes
	ca = !git add -A && git commit -av
	# Switch to a branch, creating it if necessary
	go = checkout -B
	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"
	# http://stackoverflow.com/questions/15316601/why-is-git-pull-considered-harmful
	up = "!git remote update -p; git merge --ff-only @{u}"

